Python 3.7.3 (v3.7.3:ef4ec6ed12, Mar 25 2019, 21:26:53) [MSC v.1916 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
>>> import yfanance as yf
Traceback (most recent call last):
  File "<pyshell#0>", line 1, in <module>
    import yfanance as yf
ModuleNotFoundError: No module named 'yfanance'
>>> import yfinance as yf
>>> stock = yf.Ticker('ENB.TO')
>>> stock.dividends
Date
1995-02-07    0.0625
1995-05-19    0.5000
1995-05-23    0.0625
1995-08-11    0.0625
1995-11-17    0.0625
               ...  
2018-08-14    0.6710
2018-11-14    0.6710
2019-02-14    0.7380
2019-05-14    0.7380
2019-08-14    0.7380
Name: Dividends, Length: 104, dtype: float64
>>> type(stock.dividends)
<class 'pandas.core.series.Series'>
>>> type(stock.get_dividends)
<class 'method'>
>>> type(stock.get_dividends())
<class 'pandas.core.series.Series'>
>>> stock.get_dividends
<bound method Ticker.get_dividends of yfinance.Ticker object <ENB.TO>>
>>> stock.get_dividends()
Date
1995-02-07    0.0625
1995-05-19    0.5000
1995-05-23    0.0625
1995-08-11    0.0625
1995-11-17    0.0625
               ...  
2018-08-14    0.6710
2018-11-14    0.6710
2019-02-14    0.7380
2019-05-14    0.7380
2019-08-14    0.7380
Name: Dividends, Length: 104, dtype: float64
>>> stock.get_dividends()['1995-02-07']
0.0625
>>> stock.dividends.array
<PandasArray>
[ 0.0625,     0.5,  0.0625,  0.0625,  0.0625,  0.0625,  0.0625, 0.06438,
 0.06438, 0.06438,
 ...
    0.61,    0.61,    0.61,   0.671,   0.671,   0.671,   0.671,   0.738,
   0.738,   0.738]
Length: 104, dtype: float64
>>> stock.dividends.as_matrix
<bound method NDFrame.as_matrix of Date
1995-02-07    0.0625
1995-05-19    0.5000
1995-05-23    0.0625
1995-08-11    0.0625
1995-11-17    0.0625
               ...  
2018-08-14    0.6710
2018-11-14    0.6710
2019-02-14    0.7380
2019-05-14    0.7380
2019-08-14    0.7380
Name: Dividends, Length: 104, dtype: float64>
>>> stock.dividends.as_matrix('Date')

Warning (from warnings module):
  File "__main__", line 1
FutureWarning: Method .as_matrix will be removed in a future version. Use .values instead.
Traceback (most recent call last):
  File "<pyshell#12>", line 1, in <module>
    stock.dividends.as_matrix('Date')
  File "C:\Users\nutal\AppData\Local\Programs\Python\Python37-32\lib\site-packages\pandas\core\generic.py", line 5366, in as_matrix
    return self._data.as_array(transpose=self._AXIS_REVERSED, items=columns)
  File "C:\Users\nutal\AppData\Local\Programs\Python\Python37-32\lib\site-packages\pandas\core\internals\managers.py", line 810, in as_array
    mgr = self.reindex_axis(items, axis=0)
  File "C:\Users\nutal\AppData\Local\Programs\Python\Python37-32\lib\site-packages\pandas\core\internals\managers.py", line 1215, in reindex_axis
    new_index = ensure_index(new_index)
  File "C:\Users\nutal\AppData\Local\Programs\Python\Python37-32\lib\site-packages\pandas\core\indexes\base.py", line 5771, in ensure_index
    return Index(index_like)
  File "C:\Users\nutal\AppData\Local\Programs\Python\Python37-32\lib\site-packages\pandas\core\indexes\base.py", line 519, in __new__
    cls._scalar_data_error(data)
  File "C:\Users\nutal\AppData\Local\Programs\Python\Python37-32\lib\site-packages\pandas\core\indexes\base.py", line 4108, in _scalar_data_error
    "kind, {1} was passed".format(cls.__name__, repr(data))
TypeError: Index(...) must be called with a collection of some kind, 'Date' was passed
>>> stock.dividends.as_matrix('Dividends')
Traceback (most recent call last):
  File "<pyshell#13>", line 1, in <module>
    stock.dividends.as_matrix('Dividends')
  File "C:\Users\nutal\AppData\Local\Programs\Python\Python37-32\lib\site-packages\pandas\core\generic.py", line 5366, in as_matrix
    return self._data.as_array(transpose=self._AXIS_REVERSED, items=columns)
  File "C:\Users\nutal\AppData\Local\Programs\Python\Python37-32\lib\site-packages\pandas\core\internals\managers.py", line 810, in as_array
    mgr = self.reindex_axis(items, axis=0)
  File "C:\Users\nutal\AppData\Local\Programs\Python\Python37-32\lib\site-packages\pandas\core\internals\managers.py", line 1215, in reindex_axis
    new_index = ensure_index(new_index)
  File "C:\Users\nutal\AppData\Local\Programs\Python\Python37-32\lib\site-packages\pandas\core\indexes\base.py", line 5771, in ensure_index
    return Index(index_like)
  File "C:\Users\nutal\AppData\Local\Programs\Python\Python37-32\lib\site-packages\pandas\core\indexes\base.py", line 519, in __new__
    cls._scalar_data_error(data)
  File "C:\Users\nutal\AppData\Local\Programs\Python\Python37-32\lib\site-packages\pandas\core\indexes\base.py", line 4108, in _scalar_data_error
    "kind, {1} was passed".format(cls.__name__, repr(data))
TypeError: Index(...) must be called with a collection of some kind, 'Dividends' was passed
>>> stock.dividends.between_time('2011-10-06','2019-10-06')
Traceback (most recent call last):
  File "<pyshell#14>", line 1, in <module>
    stock.dividends.between_time('2011-10-06','2019-10-06')
  File "C:\Users\nutal\AppData\Local\Programs\Python\Python37-32\lib\site-packages\pandas\core\generic.py", line 8128, in between_time
    include_end=include_end,
  File "C:\Users\nutal\AppData\Local\Programs\Python\Python37-32\lib\site-packages\pandas\core\indexes\datetimes.py", line 1393, in indexer_between_time
    start_time = tools.to_time(start_time)
  File "C:\Users\nutal\AppData\Local\Programs\Python\Python37-32\lib\site-packages\pandas\core\tools\datetimes.py", line 1104, in to_time
    return _convert_listlike(np.array([arg]), format)[0]
  File "C:\Users\nutal\AppData\Local\Programs\Python\Python37-32\lib\site-packages\pandas\core\tools\datetimes.py", line 1083, in _convert_listlike
    "Cannot convert arg {arg} to " "a time".format(arg=arg)
ValueError: Cannot convert arg ['2011-10-06'] to a time
>>> stock.dividends.between_time()
Traceback (most recent call last):
  File "<pyshell#15>", line 1, in <module>
    stock.dividends.between_time()
TypeError: between_time() missing 2 required positional arguments: 'start_time' and 'end_time'
>>> import datetime
>>> start = datetime.datetime.strptime('2011-10-06','%Y-%m-%d')
>>> end = datetime.datetime.strptime('2019-10-06','%Y-%m-%d')
>>> start
datetime.datetime(2011, 10, 6, 0, 0)
>>> stock.dividends.between_time(start,end)
Traceback (most recent call last):
  File "<pyshell#20>", line 1, in <module>
    stock.dividends.between_time(start,end)
  File "C:\Users\nutal\AppData\Local\Programs\Python\Python37-32\lib\site-packages\pandas\core\generic.py", line 8128, in between_time
    include_end=include_end,
  File "C:\Users\nutal\AppData\Local\Programs\Python\Python37-32\lib\site-packages\pandas\core\indexes\datetimes.py", line 1393, in indexer_between_time
    start_time = tools.to_time(start_time)
  File "C:\Users\nutal\AppData\Local\Programs\Python\Python37-32\lib\site-packages\pandas\core\tools\datetimes.py", line 1104, in to_time
    return _convert_listlike(np.array([arg]), format)[0]
  File "C:\Users\nutal\AppData\Local\Programs\Python\Python37-32\lib\site-packages\pandas\core\tools\datetimes.py", line 1083, in _convert_listlike
    "Cannot convert arg {arg} to " "a time".format(arg=arg)
ValueError: Cannot convert arg [datetime.datetime(2011, 10, 6, 0, 0)] to a time
>>> datetime.time(9,40,0)
datetime.time(9, 40)
>>> stock.dividends.between('2011-10-06','2019-10-06')
Traceback (most recent call last):
  File "<pyshell#23>", line 1, in <module>
    stock.dividends.between('2011-10-06','2019-10-06')
  File "C:\Users\nutal\AppData\Local\Programs\Python\Python37-32\lib\site-packages\pandas\core\series.py", line 4581, in between
    lmask = self >= left
  File "C:\Users\nutal\AppData\Local\Programs\Python\Python37-32\lib\site-packages\pandas\core\ops\__init__.py", line 1229, in wrapper
    res = na_op(values, other)
  File "C:\Users\nutal\AppData\Local\Programs\Python\Python37-32\lib\site-packages\pandas\core\ops\__init__.py", line 1117, in na_op
    return invalid_comparison(x, y, op)
  File "C:\Users\nutal\AppData\Local\Programs\Python\Python37-32\lib\site-packages\pandas\core\ops\__init__.py", line 497, in invalid_comparison
    dtype=left.dtype, typ=type(right).__name__
TypeError: Invalid comparison between dtype=float64 and str
>>> stock.get_dividends().to_excel
<bound method NDFrame.to_excel of Date
1995-02-07    0.0625
1995-05-19    0.5000
1995-05-23    0.0625
1995-08-11    0.0625
1995-11-17    0.0625
               ...  
2018-08-14    0.6710
2018-11-14    0.6710
2019-02-14    0.7380
2019-05-14    0.7380
2019-08-14    0.7380
Name: Dividends, Length: 104, dtype: float64>
>>> type(stock.get_dividends().to_excel)
<class 'method'>
>>> stock.get_dividends().to_csv
<bound method Series.to_csv of Date
1995-02-07    0.0625
1995-05-19    0.5000
1995-05-23    0.0625
1995-08-11    0.0625
1995-11-17    0.0625
               ...  
2018-08-14    0.6710
2018-11-14    0.6710
2019-02-14    0.7380
2019-05-14    0.7380
2019-08-14    0.7380
Name: Dividends, Length: 104, dtype: float64>
>>> type(stock.get_dividends().to_csv)
<class 'method'>
>>> stock.get_dividends().to_xarray
<bound method NDFrame.to_xarray of Date
1995-02-07    0.0625
1995-05-19    0.5000
1995-05-23    0.0625
1995-08-11    0.0625
1995-11-17    0.0625
               ...  
2018-08-14    0.6710
2018-11-14    0.6710
2019-02-14    0.7380
2019-05-14    0.7380
2019-08-14    0.7380
Name: Dividends, Length: 104, dtype: float64>
>>> type(stock.get_dividends().to_xarray)
<class 'method'>
>>> x = stock.get_dividends().to_xarray
>>> type(x)
<class 'method'>
>>> stock.get_dividends().to_xarray()
Traceback (most recent call last):
  File "<pyshell#32>", line 1, in <module>
    stock.get_dividends().to_xarray()
  File "C:\Users\nutal\AppData\Local\Programs\Python\Python37-32\lib\site-packages\pandas\core\generic.py", line 2906, in to_xarray
    xarray = import_optional_dependency("xarray")
  File "C:\Users\nutal\AppData\Local\Programs\Python\Python37-32\lib\site-packages\pandas\compat\_optional.py", line 93, in import_optional_dependency
    raise ImportError(message.format(name=name, extra=extra)) from None
ImportError: Missing optional dependency 'xarray'.  Use pip or conda to install xarray.
>>> type(stock.get_dividends().to_csv)
<class 'method'>
>>> type(stock.get_dividends().to_csv())

Warning (from warnings module):
  File "__main__", line 1
FutureWarning: The signature of `Series.to_csv` was aligned to that of `DataFrame.to_csv`, and argument 'header' will change its default value from False to True: please pass an explicit value to suppress this warning.
<class 'str'>
>>> stock.get_dividends().to_csv()
'1995-02-07,0.0625\r\n1995-05-19,0.5\r\n1995-05-23,0.0625\r\n1995-08-11,0.0625\r\n1995-11-17,0.0625\r\n1996-02-14,0.0625\r\n1996-05-13,0.0625\r\n1996-08-16,0.06438\r\n1996-11-13,0.06438\r\n1997-02-12,0.06438\r\n1997-05-14,0.06438\r\n1997-08-20,0.06813\r\n1997-11-19,0.06813\r\n1998-02-11,0.06813\r\n1998-05-13,0.06813\r\n1998-08-12,0.07188\r\n1998-11-17,0.07188\r\n1999-02-10,0.07188\r\n1999-05-12,0.0755\r\n1999-08-11,0.07575\r\n1999-11-17,0.07575\r\n2000-02-09,0.07575\r\n2000-05-10,0.08075\r\n2000-08-09,0.08075\r\n2000-11-15,0.08075\r\n2001-02-07,0.0875\r\n2001-05-16,0.0875\r\n2001-08-08,0.0875\r\n2001-11-21,0.0875\r\n2002-02-11,0.095\r\n2002-05-15,0.095\r\n2002-08-07,0.095\r\n2002-11-18,0.095\r\n2003-02-12,0.10375\r\n2003-05-16,0.415\r\n2003-05-19,0.415\r\n2003-08-13,0.10375\r\n2003-11-12,0.10375\r\n2004-02-11,0.1145\r\n2004-05-13,0.1145\r\n2004-08-12,0.1145\r\n2004-11-10,0.1145\r\n2005-02-11,0.125\r\n2005-05-12,0.125\r\n2005-08-11,0.125\r\n2005-11-10,0.144\r\n2006-02-13,0.144\r\n2006-05-11,0.144\r\n2006-08-11,0.144\r\n2006-11-10,0.144\r\n2007-02-13,0.154\r\n2007-05-11,0.154\r\n2007-08-13,0.154\r\n2007-11-13,0.154\r\n2007-12-21,0.0825\r\n2008-02-13,0.165\r\n2008-05-13,0.165\r\n2008-08-13,0.165\r\n2008-11-12,0.165\r\n2009-02-11,0.185\r\n2009-05-13,0.185\r\n2009-08-13,0.185\r\n2009-11-12,0.185\r\n2010-02-10,0.2125\r\n2010-05-12,0.2125\r\n2010-08-11,0.2125\r\n2010-11-10,0.2125\r\n2010-11-11,0.425\r\n2011-02-11,0.245\r\n2011-05-11,0.245\r\n2011-08-11,0.245\r\n2011-11-10,0.245\r\n2012-02-13,0.283\r\n2012-05-11,0.283\r\n2012-08-13,0.283\r\n2012-11-13,0.283\r\n2013-02-13,0.315\r\n2013-05-13,0.315\r\n2013-08-13,0.315\r\n2013-11-13,0.315\r\n2014-02-12,0.35\r\n2014-05-13,0.35\r\n2014-08-13,0.35\r\n2014-11-12,0.35\r\n2015-02-11,0.465\r\n2015-02-12,0.465\r\n2015-05-13,0.465\r\n2015-08-12,0.465\r\n2015-11-12,0.465\r\n2016-02-11,0.53\r\n2016-05-12,0.53\r\n2016-08-11,0.53\r\n2016-11-10,0.53\r\n2017-02-13,0.583\r\n2017-05-11,0.61\r\n2017-08-11,0.61\r\n2017-11-14,0.61\r\n2018-02-14,0.671\r\n2018-05-14,0.671\r\n2018-08-14,0.671\r\n2018-11-14,0.671\r\n2019-02-14,0.738\r\n2019-05-14,0.738\r\n2019-08-14,0.738\r\n'
>>> stock.get_dividends().to_excel()
Traceback (most recent call last):
  File "<pyshell#36>", line 1, in <module>
    stock.get_dividends().to_excel()
TypeError: to_excel() missing 1 required positional argument: 'excel_writer'
>>> stock.get_dividends().to_string()
'Date\n1995-02-07    0.06250\n1995-05-19    0.50000\n1995-05-23    0.06250\n1995-08-11    0.06250\n1995-11-17    0.06250\n1996-02-14    0.06250\n1996-05-13    0.06250\n1996-08-16    0.06438\n1996-11-13    0.06438\n1997-02-12    0.06438\n1997-05-14    0.06438\n1997-08-20    0.06813\n1997-11-19    0.06813\n1998-02-11    0.06813\n1998-05-13    0.06813\n1998-08-12    0.07188\n1998-11-17    0.07188\n1999-02-10    0.07188\n1999-05-12    0.07550\n1999-08-11    0.07575\n1999-11-17    0.07575\n2000-02-09    0.07575\n2000-05-10    0.08075\n2000-08-09    0.08075\n2000-11-15    0.08075\n2001-02-07    0.08750\n2001-05-16    0.08750\n2001-08-08    0.08750\n2001-11-21    0.08750\n2002-02-11    0.09500\n2002-05-15    0.09500\n2002-08-07    0.09500\n2002-11-18    0.09500\n2003-02-12    0.10375\n2003-05-16    0.41500\n2003-05-19    0.41500\n2003-08-13    0.10375\n2003-11-12    0.10375\n2004-02-11    0.11450\n2004-05-13    0.11450\n2004-08-12    0.11450\n2004-11-10    0.11450\n2005-02-11    0.12500\n2005-05-12    0.12500\n2005-08-11    0.12500\n2005-11-10    0.14400\n2006-02-13    0.14400\n2006-05-11    0.14400\n2006-08-11    0.14400\n2006-11-10    0.14400\n2007-02-13    0.15400\n2007-05-11    0.15400\n2007-08-13    0.15400\n2007-11-13    0.15400\n2007-12-21    0.08250\n2008-02-13    0.16500\n2008-05-13    0.16500\n2008-08-13    0.16500\n2008-11-12    0.16500\n2009-02-11    0.18500\n2009-05-13    0.18500\n2009-08-13    0.18500\n2009-11-12    0.18500\n2010-02-10    0.21250\n2010-05-12    0.21250\n2010-08-11    0.21250\n2010-11-10    0.21250\n2010-11-11    0.42500\n2011-02-11    0.24500\n2011-05-11    0.24500\n2011-08-11    0.24500\n2011-11-10    0.24500\n2012-02-13    0.28300\n2012-05-11    0.28300\n2012-08-13    0.28300\n2012-11-13    0.28300\n2013-02-13    0.31500\n2013-05-13    0.31500\n2013-08-13    0.31500\n2013-11-13    0.31500\n2014-02-12    0.35000\n2014-05-13    0.35000\n2014-08-13    0.35000\n2014-11-12    0.35000\n2015-02-11    0.46500\n2015-02-12    0.46500\n2015-05-13    0.46500\n2015-08-12    0.46500\n2015-11-12    0.46500\n2016-02-11    0.53000\n2016-05-12    0.53000\n2016-08-11    0.53000\n2016-11-10    0.53000\n2017-02-13    0.58300\n2017-05-11    0.61000\n2017-08-11    0.61000\n2017-11-14    0.61000\n2018-02-14    0.67100\n2018-05-14    0.67100\n2018-08-14    0.67100\n2018-11-14    0.67100\n2019-02-14    0.73800\n2019-05-14    0.73800\n2019-08-14    0.73800'
>>> x = stock.get_dividends().to_string()
>>> x.split('\n')
['Date', '1995-02-07    0.06250', '1995-05-19    0.50000', '1995-05-23    0.06250', '1995-08-11    0.06250', '1995-11-17    0.06250', '1996-02-14    0.06250', '1996-05-13    0.06250', '1996-08-16    0.06438', '1996-11-13    0.06438', '1997-02-12    0.06438', '1997-05-14    0.06438', '1997-08-20    0.06813', '1997-11-19    0.06813', '1998-02-11    0.06813', '1998-05-13    0.06813', '1998-08-12    0.07188', '1998-11-17    0.07188', '1999-02-10    0.07188', '1999-05-12    0.07550', '1999-08-11    0.07575', '1999-11-17    0.07575', '2000-02-09    0.07575', '2000-05-10    0.08075', '2000-08-09    0.08075', '2000-11-15    0.08075', '2001-02-07    0.08750', '2001-05-16    0.08750', '2001-08-08    0.08750', '2001-11-21    0.08750', '2002-02-11    0.09500', '2002-05-15    0.09500', '2002-08-07    0.09500', '2002-11-18    0.09500', '2003-02-12    0.10375', '2003-05-16    0.41500', '2003-05-19    0.41500', '2003-08-13    0.10375', '2003-11-12    0.10375', '2004-02-11    0.11450', '2004-05-13    0.11450', '2004-08-12    0.11450', '2004-11-10    0.11450', '2005-02-11    0.12500', '2005-05-12    0.12500', '2005-08-11    0.12500', '2005-11-10    0.14400', '2006-02-13    0.14400', '2006-05-11    0.14400', '2006-08-11    0.14400', '2006-11-10    0.14400', '2007-02-13    0.15400', '2007-05-11    0.15400', '2007-08-13    0.15400', '2007-11-13    0.15400', '2007-12-21    0.08250', '2008-02-13    0.16500', '2008-05-13    0.16500', '2008-08-13    0.16500', '2008-11-12    0.16500', '2009-02-11    0.18500', '2009-05-13    0.18500', '2009-08-13    0.18500', '2009-11-12    0.18500', '2010-02-10    0.21250', '2010-05-12    0.21250', '2010-08-11    0.21250', '2010-11-10    0.21250', '2010-11-11    0.42500', '2011-02-11    0.24500', '2011-05-11    0.24500', '2011-08-11    0.24500', '2011-11-10    0.24500', '2012-02-13    0.28300', '2012-05-11    0.28300', '2012-08-13    0.28300', '2012-11-13    0.28300', '2013-02-13    0.31500', '2013-05-13    0.31500', '2013-08-13    0.31500', '2013-11-13    0.31500', '2014-02-12    0.35000', '2014-05-13    0.35000', '2014-08-13    0.35000', '2014-11-12    0.35000', '2015-02-11    0.46500', '2015-02-12    0.46500', '2015-05-13    0.46500', '2015-08-12    0.46500', '2015-11-12    0.46500', '2016-02-11    0.53000', '2016-05-12    0.53000', '2016-08-11    0.53000', '2016-11-10    0.53000', '2017-02-13    0.58300', '2017-05-11    0.61000', '2017-08-11    0.61000', '2017-11-14    0.61000', '2018-02-14    0.67100', '2018-05-14    0.67100', '2018-08-14    0.67100', '2018-11-14    0.67100', '2019-02-14    0.73800', '2019-05-14    0.73800', '2019-08-14    0.73800']
>>> x = x.split('\n')
>>> x
['Date', '1995-02-07    0.06250', '1995-05-19    0.50000', '1995-05-23    0.06250', '1995-08-11    0.06250', '1995-11-17    0.06250', '1996-02-14    0.06250', '1996-05-13    0.06250', '1996-08-16    0.06438', '1996-11-13    0.06438', '1997-02-12    0.06438', '1997-05-14    0.06438', '1997-08-20    0.06813', '1997-11-19    0.06813', '1998-02-11    0.06813', '1998-05-13    0.06813', '1998-08-12    0.07188', '1998-11-17    0.07188', '1999-02-10    0.07188', '1999-05-12    0.07550', '1999-08-11    0.07575', '1999-11-17    0.07575', '2000-02-09    0.07575', '2000-05-10    0.08075', '2000-08-09    0.08075', '2000-11-15    0.08075', '2001-02-07    0.08750', '2001-05-16    0.08750', '2001-08-08    0.08750', '2001-11-21    0.08750', '2002-02-11    0.09500', '2002-05-15    0.09500', '2002-08-07    0.09500', '2002-11-18    0.09500', '2003-02-12    0.10375', '2003-05-16    0.41500', '2003-05-19    0.41500', '2003-08-13    0.10375', '2003-11-12    0.10375', '2004-02-11    0.11450', '2004-05-13    0.11450', '2004-08-12    0.11450', '2004-11-10    0.11450', '2005-02-11    0.12500', '2005-05-12    0.12500', '2005-08-11    0.12500', '2005-11-10    0.14400', '2006-02-13    0.14400', '2006-05-11    0.14400', '2006-08-11    0.14400', '2006-11-10    0.14400', '2007-02-13    0.15400', '2007-05-11    0.15400', '2007-08-13    0.15400', '2007-11-13    0.15400', '2007-12-21    0.08250', '2008-02-13    0.16500', '2008-05-13    0.16500', '2008-08-13    0.16500', '2008-11-12    0.16500', '2009-02-11    0.18500', '2009-05-13    0.18500', '2009-08-13    0.18500', '2009-11-12    0.18500', '2010-02-10    0.21250', '2010-05-12    0.21250', '2010-08-11    0.21250', '2010-11-10    0.21250', '2010-11-11    0.42500', '2011-02-11    0.24500', '2011-05-11    0.24500', '2011-08-11    0.24500', '2011-11-10    0.24500', '2012-02-13    0.28300', '2012-05-11    0.28300', '2012-08-13    0.28300', '2012-11-13    0.28300', '2013-02-13    0.31500', '2013-05-13    0.31500', '2013-08-13    0.31500', '2013-11-13    0.31500', '2014-02-12    0.35000', '2014-05-13    0.35000', '2014-08-13    0.35000', '2014-11-12    0.35000', '2015-02-11    0.46500', '2015-02-12    0.46500', '2015-05-13    0.46500', '2015-08-12    0.46500', '2015-11-12    0.46500', '2016-02-11    0.53000', '2016-05-12    0.53000', '2016-08-11    0.53000', '2016-11-10    0.53000', '2017-02-13    0.58300', '2017-05-11    0.61000', '2017-08-11    0.61000', '2017-11-14    0.61000', '2018-02-14    0.67100', '2018-05-14    0.67100', '2018-08-14    0.67100', '2018-11-14    0.67100', '2019-02-14    0.73800', '2019-05-14    0.73800', '2019-08-14    0.73800']
>>> type(x)
<class 'list'>
>>> x.remove(0)
Traceback (most recent call last):
  File "<pyshell#43>", line 1, in <module>
    x.remove(0)
ValueError: list.remove(x): x not in list
>>> x.pop(0)
'Date'
>>> x
['1995-02-07    0.06250', '1995-05-19    0.50000', '1995-05-23    0.06250', '1995-08-11    0.06250', '1995-11-17    0.06250', '1996-02-14    0.06250', '1996-05-13    0.06250', '1996-08-16    0.06438', '1996-11-13    0.06438', '1997-02-12    0.06438', '1997-05-14    0.06438', '1997-08-20    0.06813', '1997-11-19    0.06813', '1998-02-11    0.06813', '1998-05-13    0.06813', '1998-08-12    0.07188', '1998-11-17    0.07188', '1999-02-10    0.07188', '1999-05-12    0.07550', '1999-08-11    0.07575', '1999-11-17    0.07575', '2000-02-09    0.07575', '2000-05-10    0.08075', '2000-08-09    0.08075', '2000-11-15    0.08075', '2001-02-07    0.08750', '2001-05-16    0.08750', '2001-08-08    0.08750', '2001-11-21    0.08750', '2002-02-11    0.09500', '2002-05-15    0.09500', '2002-08-07    0.09500', '2002-11-18    0.09500', '2003-02-12    0.10375', '2003-05-16    0.41500', '2003-05-19    0.41500', '2003-08-13    0.10375', '2003-11-12    0.10375', '2004-02-11    0.11450', '2004-05-13    0.11450', '2004-08-12    0.11450', '2004-11-10    0.11450', '2005-02-11    0.12500', '2005-05-12    0.12500', '2005-08-11    0.12500', '2005-11-10    0.14400', '2006-02-13    0.14400', '2006-05-11    0.14400', '2006-08-11    0.14400', '2006-11-10    0.14400', '2007-02-13    0.15400', '2007-05-11    0.15400', '2007-08-13    0.15400', '2007-11-13    0.15400', '2007-12-21    0.08250', '2008-02-13    0.16500', '2008-05-13    0.16500', '2008-08-13    0.16500', '2008-11-12    0.16500', '2009-02-11    0.18500', '2009-05-13    0.18500', '2009-08-13    0.18500', '2009-11-12    0.18500', '2010-02-10    0.21250', '2010-05-12    0.21250', '2010-08-11    0.21250', '2010-11-10    0.21250', '2010-11-11    0.42500', '2011-02-11    0.24500', '2011-05-11    0.24500', '2011-08-11    0.24500', '2011-11-10    0.24500', '2012-02-13    0.28300', '2012-05-11    0.28300', '2012-08-13    0.28300', '2012-11-13    0.28300', '2013-02-13    0.31500', '2013-05-13    0.31500', '2013-08-13    0.31500', '2013-11-13    0.31500', '2014-02-12    0.35000', '2014-05-13    0.35000', '2014-08-13    0.35000', '2014-11-12    0.35000', '2015-02-11    0.46500', '2015-02-12    0.46500', '2015-05-13    0.46500', '2015-08-12    0.46500', '2015-11-12    0.46500', '2016-02-11    0.53000', '2016-05-12    0.53000', '2016-08-11    0.53000', '2016-11-10    0.53000', '2017-02-13    0.58300', '2017-05-11    0.61000', '2017-08-11    0.61000', '2017-11-14    0.61000', '2018-02-14    0.67100', '2018-05-14    0.67100', '2018-08-14    0.67100', '2018-11-14    0.67100', '2019-02-14    0.73800', '2019-05-14    0.73800', '2019-08-14    0.73800']
>>> len(x)
104
>>> date,div = [],[]
>>> for i in x:
	date.append(i[:10])
	div.append(i[-7:])

	
>>> date
['1995-02-07', '1995-05-19', '1995-05-23', '1995-08-11', '1995-11-17', '1996-02-14', '1996-05-13', '1996-08-16', '1996-11-13', '1997-02-12', '1997-05-14', '1997-08-20', '1997-11-19', '1998-02-11', '1998-05-13', '1998-08-12', '1998-11-17', '1999-02-10', '1999-05-12', '1999-08-11', '1999-11-17', '2000-02-09', '2000-05-10', '2000-08-09', '2000-11-15', '2001-02-07', '2001-05-16', '2001-08-08', '2001-11-21', '2002-02-11', '2002-05-15', '2002-08-07', '2002-11-18', '2003-02-12', '2003-05-16', '2003-05-19', '2003-08-13', '2003-11-12', '2004-02-11', '2004-05-13', '2004-08-12', '2004-11-10', '2005-02-11', '2005-05-12', '2005-08-11', '2005-11-10', '2006-02-13', '2006-05-11', '2006-08-11', '2006-11-10', '2007-02-13', '2007-05-11', '2007-08-13', '2007-11-13', '2007-12-21', '2008-02-13', '2008-05-13', '2008-08-13', '2008-11-12', '2009-02-11', '2009-05-13', '2009-08-13', '2009-11-12', '2010-02-10', '2010-05-12', '2010-08-11', '2010-11-10', '2010-11-11', '2011-02-11', '2011-05-11', '2011-08-11', '2011-11-10', '2012-02-13', '2012-05-11', '2012-08-13', '2012-11-13', '2013-02-13', '2013-05-13', '2013-08-13', '2013-11-13', '2014-02-12', '2014-05-13', '2014-08-13', '2014-11-12', '2015-02-11', '2015-02-12', '2015-05-13', '2015-08-12', '2015-11-12', '2016-02-11', '2016-05-12', '2016-08-11', '2016-11-10', '2017-02-13', '2017-05-11', '2017-08-11', '2017-11-14', '2018-02-14', '2018-05-14', '2018-08-14', '2018-11-14', '2019-02-14', '2019-05-14', '2019-08-14']
>>> div
['0.06250', '0.50000', '0.06250', '0.06250', '0.06250', '0.06250', '0.06250', '0.06438', '0.06438', '0.06438', '0.06438', '0.06813', '0.06813', '0.06813', '0.06813', '0.07188', '0.07188', '0.07188', '0.07550', '0.07575', '0.07575', '0.07575', '0.08075', '0.08075', '0.08075', '0.08750', '0.08750', '0.08750', '0.08750', '0.09500', '0.09500', '0.09500', '0.09500', '0.10375', '0.41500', '0.41500', '0.10375', '0.10375', '0.11450', '0.11450', '0.11450', '0.11450', '0.12500', '0.12500', '0.12500', '0.14400', '0.14400', '0.14400', '0.14400', '0.14400', '0.15400', '0.15400', '0.15400', '0.15400', '0.08250', '0.16500', '0.16500', '0.16500', '0.16500', '0.18500', '0.18500', '0.18500', '0.18500', '0.21250', '0.21250', '0.21250', '0.21250', '0.42500', '0.24500', '0.24500', '0.24500', '0.24500', '0.28300', '0.28300', '0.28300', '0.28300', '0.31500', '0.31500', '0.31500', '0.31500', '0.35000', '0.35000', '0.35000', '0.35000', '0.46500', '0.46500', '0.46500', '0.46500', '0.46500', '0.53000', '0.53000', '0.53000', '0.53000', '0.58300', '0.61000', '0.61000', '0.61000', '0.67100', '0.67100', '0.67100', '0.67100', '0.73800', '0.73800', '0.73800']
>>> div = []
>>> for i in x:
	div.append(float(i[-7:]))

	
>>> div
[0.0625, 0.5, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.06438, 0.06438, 0.06438, 0.06438, 0.06813, 0.06813, 0.06813, 0.06813, 0.07188, 0.07188, 0.07188, 0.0755, 0.07575, 0.07575, 0.07575, 0.08075, 0.08075, 0.08075, 0.0875, 0.0875, 0.0875, 0.0875, 0.095, 0.095, 0.095, 0.095, 0.10375, 0.415, 0.415, 0.10375, 0.10375, 0.1145, 0.1145, 0.1145, 0.1145, 0.125, 0.125, 0.125, 0.144, 0.144, 0.144, 0.144, 0.144, 0.154, 0.154, 0.154, 0.154, 0.0825, 0.165, 0.165, 0.165, 0.165, 0.185, 0.185, 0.185, 0.185, 0.2125, 0.2125, 0.2125, 0.2125, 0.425, 0.245, 0.245, 0.245, 0.245, 0.283, 0.283, 0.283, 0.283, 0.315, 0.315, 0.315, 0.315, 0.35, 0.35, 0.35, 0.35, 0.465, 0.465, 0.465, 0.465, 0.465, 0.53, 0.53, 0.53, 0.53, 0.583, 0.61, 0.61, 0.61, 0.671, 0.671, 0.671, 0.671, 0.738, 0.738, 0.738]
>>> date,div = [],[]
>>> for i in x:
	div.append(float(i[-7:]))
	date.append(datetime.datetime.strptime(i[:10],'%Y-%m-%d'))

	
>>> date

>>> date(0)
Traceback (most recent call last):
  File "<pyshell#64>", line 1, in <module>
    date(0)
TypeError: 'list' object is not callable
>>> date[0]
datetime.datetime(1995, 2, 7, 0, 0)
>>> dic
Traceback (most recent call last):
  File "<pyshell#66>", line 1, in <module>
    dic
NameError: name 'dic' is not defined
>>> div
[0.0625, 0.5, 0.0625, 0.0625, 0.0625, 0.0625, 0.0625, 0.06438, 0.06438, 0.06438, 0.06438, 0.06813, 0.06813, 0.06813, 0.06813, 0.07188, 0.07188, 0.07188, 0.0755, 0.07575, 0.07575, 0.07575, 0.08075, 0.08075, 0.08075, 0.0875, 0.0875, 0.0875, 0.0875, 0.095, 0.095, 0.095, 0.095, 0.10375, 0.415, 0.415, 0.10375, 0.10375, 0.1145, 0.1145, 0.1145, 0.1145, 0.125, 0.125, 0.125, 0.144, 0.144, 0.144, 0.144, 0.144, 0.154, 0.154, 0.154, 0.154, 0.0825, 0.165, 0.165, 0.165, 0.165, 0.185, 0.185, 0.185, 0.185, 0.2125, 0.2125, 0.2125, 0.2125, 0.425, 0.245, 0.245, 0.245, 0.245, 0.283, 0.283, 0.283, 0.283, 0.315, 0.315, 0.315, 0.315, 0.35, 0.35, 0.35, 0.35, 0.465, 0.465, 0.465, 0.465, 0.465, 0.53, 0.53, 0.53, 0.53, 0.583, 0.61, 0.61, 0.61, 0.671, 0.671, 0.671, 0.671, 0.738, 0.738, 0.738]
>>> 
